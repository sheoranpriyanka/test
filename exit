[1mdiff --git a/coins/bch.js b/coins/bch.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1f8ed86[m
[1m--- /dev/null[m
[1m+++ b/coins/bch.js[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * It is library that helps creating addres, transfer amount[m
[32m+[m[32m * it supports btc, ltc and bch[m
[32m+[m[32m */[m
[32m+[m[32mconst RpcClient = require('../rpcclient');[m
[32m+[m[32mconst config = require('config');[m
[32m+[m[32mconst client = new RpcClient(config.get('bch'));[m
[32m+[m[32m/**[m
[32m+[m[32m * Create wallet function[m
[32m+[m[32m * @returns {String} Return address[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mconst createWallet = () => {[m
[32m+[m[32m    return client.execute('getnewaddress',[]);[m
[32m+[m[32m};[m
[32m+[m[32m/**[m
[32m+[m[32m * Create mulit signature wallet function[m
[32m+[m[32m * @param account {String} account name[m
[32m+[m[32m * @returns {String} Return multisig wallet address[m
[32m+[m[32m */[m
[32m+[m[32mconst createMultiSigWallet = async(account) => {[m
[32m+[m[32m    if (!account) throw new Error('Account name is required.');[m
[32m+[m[32m    let keys = [];[m
[32m+[m[32m    await keys.push(await createWallet());[m
[32m+[m[32m    await keys.push(await createWallet());[m
[32m+[m[32m    //keys.toString();[m
[32m+[m[32m    console.log(keys);[m
[32m+[m[32m    return client.execute('addmultisigaddress', [2, keys, account]);[m
[32m+[m[32m};[m
[32m+[m[32m/**[m
[32m+[m[32m * Create mulit signature wallet function[m
[32m+[m[32m * @param {String} account account name[m
[32m+[m[32m * @returns {Number} Return balance of particular address[m
[32m+[m[32m */[m
[32m+[m[32mconst getBalance = async (account) => {[m
[32m+[m[32m    if (!account) throw new Error('Account name is required.');[m
[32m+[m[32m    return await client.execute('getbalance', [account]);[m
[32m+[m[32m};[m
[32m+[m[32m/**[m
[32m+[m[32m * Create mulit signature wallet function[m
[32m+[m[32m * @param {String} from from account[m
[32m+[m[32m * @param {String} to to account[m
[32m+[m[32m * @param {String} amount amount to be sent[m
[32m+[m[32m * @param {Object} options will contain other options[m
[32m+[m[32m * @returns {String} Return transaction hex[m
[32m+[m[32m */[m
[32m+[m[32mconst transferAmount = async (from, to, amount, options) => {[m
[32m+[m[32m    if (!from) throw new Error('from account is required.');[m
[32m+[m[32m    if (!to) throw new Error('to account is required.');[m
[32m+[m[32m    if (!amount) throw new Error('Amount is required.');[m
[32m+[m[32m    return await client.execute('sendfrom', [from, to, amount]);[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * @param {String} tx[m
[32m+[m[32m * @return transaction object[m
[32m+[m[32m */[m
[32m+[m[32mconst getTransaction = async (tx) => {[m
[32m+[m[32m    return await client.execute('gettransaction', [tx]);[m
[32m+[m[32m}[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m    createWallet[m
[32m+[m[32m    , getBalance[m
[32m+[m[32m    , transferAmount[m
[32m+[m[32m    , createMultiSigWallet[m
[32m+[m[32m    , getTransaction[m
[32m+[m[32m};[m
[1mdiff --git a/config/default.json b/config/default.json[m
[1mindex eef198f..97bc85e 100644[m
[1m--- a/config/default.json[m
[1m+++ b/config/default.json[m
[36m@@ -20,7 +20,7 @@[m
         "path": "/",[m
         "port": 8332,[m
         "host": "18.184.253.112",[m
[31m-        "username": "bitcoincash",[m
[32m+[m[32m        "username": "amir",[m
         "password": "amir@bitcoincash"[m
       },[m
 "eth":{[m
[1mdiff --git a/index.js b/index.js[m
[1mindex 24e1534..c71c06c 100644[m
[1m--- a/index.js[m
[1m+++ b/index.js[m
[36m@@ -6,6 +6,7 @@[m [mvar btc = require("./coins/btc.js");[m
 var ltc = require("./coins/ltc.js");[m
 var eth = require("./coins/eth.js");[m
 var xrp = require("./coins/xrp.js");[m
[32m+[m[32mvar bch = require("./coins/bch.js");[m
 [m
 app.use(bodyParser.json());[m
 app.use(bodyParser.urlencoded({ extended: true }));[m
[36m@@ -29,8 +30,8 @@[m [mapp.use(bodyParser.urlencoded({ extended: true }));[m
 app.listen("3000",function(){[m
   console.log("listening on port 3000");[m
 });[m
[31m-xrp.createWallet();[m
[32m+[m[32m//xrp.createWallet();[m
 //btc.createWallet();[m
 //eth.blockNumber();[m
[31m-//eth.createMultiSigWallet("eth","miiwallet");[m
[32m+[m[32mbch.createMultiSigWallet("miiwallet");[m
 //btc.getBalance();[m
